plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.written'
version = '0.0.1'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
    set('springCloudVersion', "2023.0.0")
}

dependencies {
    implementation(
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-mail',
            'org.springframework.security:spring-security-crypto',
            'org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-data-redis',
            'org.springframework.boot:spring-boot-starter-validation',
            'org.springframework.cloud:spring-cloud-starter-openfeign',
            'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client',
            'org.springframework.boot:spring-boot-starter-security',
            'org.springdoc:springdoc-openapi-starter-webmvc-ui',
            'io.jsonwebtoken:jjwt-impl:0.12.5',
            'io.jsonwebtoken:jjwt-api:0.12.5',
            'io.jsonwebtoken:jjwt-jackson:0.12.5',
            'com.mysql:mysql-connector-j:8.0.32'

    )

    implementation(
            'org.liquibase:liquibase-core',
            'com.nimbusds:nimbus-jose-jwt:9.31',
            'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    )

    annotationProcessor(
            'org.projectlombok:lombok',
            'org.springframework.boot:spring-boot-configuration-processor'
    )

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    compileOnly 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.7.3'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}


